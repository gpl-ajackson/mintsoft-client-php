<?php
/**
 * ToolkitDataClassesWarehouseAPIWarehouseTransfer
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ToolkitDataClassesWarehouseAPIWarehouseTransfer Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ToolkitDataClassesWarehouseAPIWarehouseTransfer implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Toolkit.DataClasses.Warehouse.APIWarehouseTransfer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'source_warehouse_id' => 'int',
        'destination_warehouse_id' => 'int',
        'reference' => 'string',
        'expected_delivery_date' => '\DateTime',
        'comments' => 'string',
        'warehouse_transfer_status' => 'string',
        'items' => '\Swagger\Client\Model\ToolkitDataClassesWarehouseAPIWarehouseTransferItem[]',
        'goods_in_type' => 'string',
        'quantity' => 'int',
        'courier_service_id' => 'int',
        'courier_service' => 'string',
        'channel_id' => 'int',
        'client_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'source_warehouse_id' => 'int32',
        'destination_warehouse_id' => 'int32',
        'reference' => null,
        'expected_delivery_date' => 'date-time',
        'comments' => null,
        'warehouse_transfer_status' => null,
        'items' => null,
        'goods_in_type' => null,
        'quantity' => 'int32',
        'courier_service_id' => 'int32',
        'courier_service' => null,
        'channel_id' => 'int32',
        'client_id' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'source_warehouse_id' => 'SourceWarehouseId',
        'destination_warehouse_id' => 'DestinationWarehouseId',
        'reference' => 'Reference',
        'expected_delivery_date' => 'ExpectedDeliveryDate',
        'comments' => 'Comments',
        'warehouse_transfer_status' => 'WarehouseTransferStatus',
        'items' => 'Items',
        'goods_in_type' => 'GoodsInType',
        'quantity' => 'Quantity',
        'courier_service_id' => 'CourierServiceId',
        'courier_service' => 'CourierService',
        'channel_id' => 'ChannelId',
        'client_id' => 'ClientId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'source_warehouse_id' => 'setSourceWarehouseId',
        'destination_warehouse_id' => 'setDestinationWarehouseId',
        'reference' => 'setReference',
        'expected_delivery_date' => 'setExpectedDeliveryDate',
        'comments' => 'setComments',
        'warehouse_transfer_status' => 'setWarehouseTransferStatus',
        'items' => 'setItems',
        'goods_in_type' => 'setGoodsInType',
        'quantity' => 'setQuantity',
        'courier_service_id' => 'setCourierServiceId',
        'courier_service' => 'setCourierService',
        'channel_id' => 'setChannelId',
        'client_id' => 'setClientId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'source_warehouse_id' => 'getSourceWarehouseId',
        'destination_warehouse_id' => 'getDestinationWarehouseId',
        'reference' => 'getReference',
        'expected_delivery_date' => 'getExpectedDeliveryDate',
        'comments' => 'getComments',
        'warehouse_transfer_status' => 'getWarehouseTransferStatus',
        'items' => 'getItems',
        'goods_in_type' => 'getGoodsInType',
        'quantity' => 'getQuantity',
        'courier_service_id' => 'getCourierServiceId',
        'courier_service' => 'getCourierService',
        'channel_id' => 'getChannelId',
        'client_id' => 'getClientId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['source_warehouse_id'] = isset($data['source_warehouse_id']) ? $data['source_warehouse_id'] : null;
        $this->container['destination_warehouse_id'] = isset($data['destination_warehouse_id']) ? $data['destination_warehouse_id'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['expected_delivery_date'] = isset($data['expected_delivery_date']) ? $data['expected_delivery_date'] : null;
        $this->container['comments'] = isset($data['comments']) ? $data['comments'] : null;
        $this->container['warehouse_transfer_status'] = isset($data['warehouse_transfer_status']) ? $data['warehouse_transfer_status'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
        $this->container['goods_in_type'] = isset($data['goods_in_type']) ? $data['goods_in_type'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['courier_service_id'] = isset($data['courier_service_id']) ? $data['courier_service_id'] : null;
        $this->container['courier_service'] = isset($data['courier_service']) ? $data['courier_service'] : null;
        $this->container['channel_id'] = isset($data['channel_id']) ? $data['channel_id'] : null;
        $this->container['client_id'] = isset($data['client_id']) ? $data['client_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets source_warehouse_id
     *
     * @return int
     */
    public function getSourceWarehouseId()
    {
        return $this->container['source_warehouse_id'];
    }

    /**
     * Sets source_warehouse_id
     *
     * @param int $source_warehouse_id source_warehouse_id
     *
     * @return $this
     */
    public function setSourceWarehouseId($source_warehouse_id)
    {
        $this->container['source_warehouse_id'] = $source_warehouse_id;

        return $this;
    }

    /**
     * Gets destination_warehouse_id
     *
     * @return int
     */
    public function getDestinationWarehouseId()
    {
        return $this->container['destination_warehouse_id'];
    }

    /**
     * Sets destination_warehouse_id
     *
     * @param int $destination_warehouse_id destination_warehouse_id
     *
     * @return $this
     */
    public function setDestinationWarehouseId($destination_warehouse_id)
    {
        $this->container['destination_warehouse_id'] = $destination_warehouse_id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets expected_delivery_date
     *
     * @return \DateTime
     */
    public function getExpectedDeliveryDate()
    {
        return $this->container['expected_delivery_date'];
    }

    /**
     * Sets expected_delivery_date
     *
     * @param \DateTime $expected_delivery_date expected_delivery_date
     *
     * @return $this
     */
    public function setExpectedDeliveryDate($expected_delivery_date)
    {
        $this->container['expected_delivery_date'] = $expected_delivery_date;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return string
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param string $comments comments
     *
     * @return $this
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets warehouse_transfer_status
     *
     * @return string
     */
    public function getWarehouseTransferStatus()
    {
        return $this->container['warehouse_transfer_status'];
    }

    /**
     * Sets warehouse_transfer_status
     *
     * @param string $warehouse_transfer_status warehouse_transfer_status
     *
     * @return $this
     */
    public function setWarehouseTransferStatus($warehouse_transfer_status)
    {
        $this->container['warehouse_transfer_status'] = $warehouse_transfer_status;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Swagger\Client\Model\ToolkitDataClassesWarehouseAPIWarehouseTransferItem[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Swagger\Client\Model\ToolkitDataClassesWarehouseAPIWarehouseTransferItem[] $items items
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets goods_in_type
     *
     * @return string
     */
    public function getGoodsInType()
    {
        return $this->container['goods_in_type'];
    }

    /**
     * Sets goods_in_type
     *
     * @param string $goods_in_type goods_in_type
     *
     * @return $this
     */
    public function setGoodsInType($goods_in_type)
    {
        $this->container['goods_in_type'] = $goods_in_type;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets courier_service_id
     *
     * @return int
     */
    public function getCourierServiceId()
    {
        return $this->container['courier_service_id'];
    }

    /**
     * Sets courier_service_id
     *
     * @param int $courier_service_id courier_service_id
     *
     * @return $this
     */
    public function setCourierServiceId($courier_service_id)
    {
        $this->container['courier_service_id'] = $courier_service_id;

        return $this;
    }

    /**
     * Gets courier_service
     *
     * @return string
     */
    public function getCourierService()
    {
        return $this->container['courier_service'];
    }

    /**
     * Sets courier_service
     *
     * @param string $courier_service courier_service
     *
     * @return $this
     */
    public function setCourierService($courier_service)
    {
        $this->container['courier_service'] = $courier_service;

        return $this;
    }

    /**
     * Gets channel_id
     *
     * @return int
     */
    public function getChannelId()
    {
        return $this->container['channel_id'];
    }

    /**
     * Sets channel_id
     *
     * @param int $channel_id channel_id
     *
     * @return $this
     */
    public function setChannelId($channel_id)
    {
        $this->container['channel_id'] = $channel_id;

        return $this;
    }

    /**
     * Gets client_id
     *
     * @return int
     */
    public function getClientId()
    {
        return $this->container['client_id'];
    }

    /**
     * Sets client_id
     *
     * @param int $client_id client_id
     *
     * @return $this
     */
    public function setClientId($client_id)
    {
        $this->container['client_id'] = $client_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


