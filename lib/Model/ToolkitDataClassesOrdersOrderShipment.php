<?php
/**
 * ToolkitDataClassesOrdersOrderShipment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ToolkitDataClassesOrdersOrderShipment Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ToolkitDataClassesOrdersOrderShipment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Toolkit.DataClasses.Orders.OrderShipment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_id' => 'int',
        'order_document_id' => 'int',
        'courier_type' => 'string',
        'account_id' => 'int',
        'number' => 'string',
        'extra_bool1' => 'bool',
        'extra_bool2' => 'bool',
        'extra_int1' => 'int',
        'extra_int2' => 'int',
        'extra_string1' => 'string',
        'extra_string2' => 'string',
        'commercial_invoice_id' => 'int',
        'return_label_id' => 'int',
        'download_tracking_events' => 'bool',
        'requires_manifesting' => 'bool',
        'manifested' => 'bool',
        'shipment_date' => '\DateTime',
        'label_url' => 'string',
        'id' => 'int',
        'last_updated' => '\DateTime',
        'last_updated_by_user' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_id' => 'int32',
        'order_document_id' => 'int32',
        'courier_type' => null,
        'account_id' => 'int32',
        'number' => null,
        'extra_bool1' => null,
        'extra_bool2' => null,
        'extra_int1' => 'int32',
        'extra_int2' => 'int32',
        'extra_string1' => null,
        'extra_string2' => null,
        'commercial_invoice_id' => 'int32',
        'return_label_id' => 'int32',
        'download_tracking_events' => null,
        'requires_manifesting' => null,
        'manifested' => null,
        'shipment_date' => 'date-time',
        'label_url' => null,
        'id' => 'int32',
        'last_updated' => 'date-time',
        'last_updated_by_user' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_id' => 'OrderId',
        'order_document_id' => 'OrderDocumentId',
        'courier_type' => 'CourierType',
        'account_id' => 'AccountId',
        'number' => 'Number',
        'extra_bool1' => 'ExtraBool1',
        'extra_bool2' => 'ExtraBool2',
        'extra_int1' => 'ExtraInt1',
        'extra_int2' => 'ExtraInt2',
        'extra_string1' => 'ExtraString1',
        'extra_string2' => 'ExtraString2',
        'commercial_invoice_id' => 'CommercialInvoiceId',
        'return_label_id' => 'ReturnLabelId',
        'download_tracking_events' => 'DownloadTrackingEvents',
        'requires_manifesting' => 'RequiresManifesting',
        'manifested' => 'Manifested',
        'shipment_date' => 'ShipmentDate',
        'label_url' => 'LabelURL',
        'id' => 'ID',
        'last_updated' => 'LastUpdated',
        'last_updated_by_user' => 'LastUpdatedByUser'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_id' => 'setOrderId',
        'order_document_id' => 'setOrderDocumentId',
        'courier_type' => 'setCourierType',
        'account_id' => 'setAccountId',
        'number' => 'setNumber',
        'extra_bool1' => 'setExtraBool1',
        'extra_bool2' => 'setExtraBool2',
        'extra_int1' => 'setExtraInt1',
        'extra_int2' => 'setExtraInt2',
        'extra_string1' => 'setExtraString1',
        'extra_string2' => 'setExtraString2',
        'commercial_invoice_id' => 'setCommercialInvoiceId',
        'return_label_id' => 'setReturnLabelId',
        'download_tracking_events' => 'setDownloadTrackingEvents',
        'requires_manifesting' => 'setRequiresManifesting',
        'manifested' => 'setManifested',
        'shipment_date' => 'setShipmentDate',
        'label_url' => 'setLabelUrl',
        'id' => 'setId',
        'last_updated' => 'setLastUpdated',
        'last_updated_by_user' => 'setLastUpdatedByUser'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_id' => 'getOrderId',
        'order_document_id' => 'getOrderDocumentId',
        'courier_type' => 'getCourierType',
        'account_id' => 'getAccountId',
        'number' => 'getNumber',
        'extra_bool1' => 'getExtraBool1',
        'extra_bool2' => 'getExtraBool2',
        'extra_int1' => 'getExtraInt1',
        'extra_int2' => 'getExtraInt2',
        'extra_string1' => 'getExtraString1',
        'extra_string2' => 'getExtraString2',
        'commercial_invoice_id' => 'getCommercialInvoiceId',
        'return_label_id' => 'getReturnLabelId',
        'download_tracking_events' => 'getDownloadTrackingEvents',
        'requires_manifesting' => 'getRequiresManifesting',
        'manifested' => 'getManifested',
        'shipment_date' => 'getShipmentDate',
        'label_url' => 'getLabelUrl',
        'id' => 'getId',
        'last_updated' => 'getLastUpdated',
        'last_updated_by_user' => 'getLastUpdatedByUser'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['order_document_id'] = isset($data['order_document_id']) ? $data['order_document_id'] : null;
        $this->container['courier_type'] = isset($data['courier_type']) ? $data['courier_type'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['extra_bool1'] = isset($data['extra_bool1']) ? $data['extra_bool1'] : null;
        $this->container['extra_bool2'] = isset($data['extra_bool2']) ? $data['extra_bool2'] : null;
        $this->container['extra_int1'] = isset($data['extra_int1']) ? $data['extra_int1'] : null;
        $this->container['extra_int2'] = isset($data['extra_int2']) ? $data['extra_int2'] : null;
        $this->container['extra_string1'] = isset($data['extra_string1']) ? $data['extra_string1'] : null;
        $this->container['extra_string2'] = isset($data['extra_string2']) ? $data['extra_string2'] : null;
        $this->container['commercial_invoice_id'] = isset($data['commercial_invoice_id']) ? $data['commercial_invoice_id'] : null;
        $this->container['return_label_id'] = isset($data['return_label_id']) ? $data['return_label_id'] : null;
        $this->container['download_tracking_events'] = isset($data['download_tracking_events']) ? $data['download_tracking_events'] : null;
        $this->container['requires_manifesting'] = isset($data['requires_manifesting']) ? $data['requires_manifesting'] : null;
        $this->container['manifested'] = isset($data['manifested']) ? $data['manifested'] : null;
        $this->container['shipment_date'] = isset($data['shipment_date']) ? $data['shipment_date'] : null;
        $this->container['label_url'] = isset($data['label_url']) ? $data['label_url'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['last_updated'] = isset($data['last_updated']) ? $data['last_updated'] : null;
        $this->container['last_updated_by_user'] = isset($data['last_updated_by_user']) ? $data['last_updated_by_user'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_id
     *
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param int $order_id order_id
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets order_document_id
     *
     * @return int
     */
    public function getOrderDocumentId()
    {
        return $this->container['order_document_id'];
    }

    /**
     * Sets order_document_id
     *
     * @param int $order_document_id order_document_id
     *
     * @return $this
     */
    public function setOrderDocumentId($order_document_id)
    {
        $this->container['order_document_id'] = $order_document_id;

        return $this;
    }

    /**
     * Gets courier_type
     *
     * @return string
     */
    public function getCourierType()
    {
        return $this->container['courier_type'];
    }

    /**
     * Sets courier_type
     *
     * @param string $courier_type courier_type
     *
     * @return $this
     */
    public function setCourierType($courier_type)
    {
        $this->container['courier_type'] = $courier_type;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets extra_bool1
     *
     * @return bool
     */
    public function getExtraBool1()
    {
        return $this->container['extra_bool1'];
    }

    /**
     * Sets extra_bool1
     *
     * @param bool $extra_bool1 extra_bool1
     *
     * @return $this
     */
    public function setExtraBool1($extra_bool1)
    {
        $this->container['extra_bool1'] = $extra_bool1;

        return $this;
    }

    /**
     * Gets extra_bool2
     *
     * @return bool
     */
    public function getExtraBool2()
    {
        return $this->container['extra_bool2'];
    }

    /**
     * Sets extra_bool2
     *
     * @param bool $extra_bool2 extra_bool2
     *
     * @return $this
     */
    public function setExtraBool2($extra_bool2)
    {
        $this->container['extra_bool2'] = $extra_bool2;

        return $this;
    }

    /**
     * Gets extra_int1
     *
     * @return int
     */
    public function getExtraInt1()
    {
        return $this->container['extra_int1'];
    }

    /**
     * Sets extra_int1
     *
     * @param int $extra_int1 extra_int1
     *
     * @return $this
     */
    public function setExtraInt1($extra_int1)
    {
        $this->container['extra_int1'] = $extra_int1;

        return $this;
    }

    /**
     * Gets extra_int2
     *
     * @return int
     */
    public function getExtraInt2()
    {
        return $this->container['extra_int2'];
    }

    /**
     * Sets extra_int2
     *
     * @param int $extra_int2 extra_int2
     *
     * @return $this
     */
    public function setExtraInt2($extra_int2)
    {
        $this->container['extra_int2'] = $extra_int2;

        return $this;
    }

    /**
     * Gets extra_string1
     *
     * @return string
     */
    public function getExtraString1()
    {
        return $this->container['extra_string1'];
    }

    /**
     * Sets extra_string1
     *
     * @param string $extra_string1 extra_string1
     *
     * @return $this
     */
    public function setExtraString1($extra_string1)
    {
        $this->container['extra_string1'] = $extra_string1;

        return $this;
    }

    /**
     * Gets extra_string2
     *
     * @return string
     */
    public function getExtraString2()
    {
        return $this->container['extra_string2'];
    }

    /**
     * Sets extra_string2
     *
     * @param string $extra_string2 extra_string2
     *
     * @return $this
     */
    public function setExtraString2($extra_string2)
    {
        $this->container['extra_string2'] = $extra_string2;

        return $this;
    }

    /**
     * Gets commercial_invoice_id
     *
     * @return int
     */
    public function getCommercialInvoiceId()
    {
        return $this->container['commercial_invoice_id'];
    }

    /**
     * Sets commercial_invoice_id
     *
     * @param int $commercial_invoice_id commercial_invoice_id
     *
     * @return $this
     */
    public function setCommercialInvoiceId($commercial_invoice_id)
    {
        $this->container['commercial_invoice_id'] = $commercial_invoice_id;

        return $this;
    }

    /**
     * Gets return_label_id
     *
     * @return int
     */
    public function getReturnLabelId()
    {
        return $this->container['return_label_id'];
    }

    /**
     * Sets return_label_id
     *
     * @param int $return_label_id return_label_id
     *
     * @return $this
     */
    public function setReturnLabelId($return_label_id)
    {
        $this->container['return_label_id'] = $return_label_id;

        return $this;
    }

    /**
     * Gets download_tracking_events
     *
     * @return bool
     */
    public function getDownloadTrackingEvents()
    {
        return $this->container['download_tracking_events'];
    }

    /**
     * Sets download_tracking_events
     *
     * @param bool $download_tracking_events download_tracking_events
     *
     * @return $this
     */
    public function setDownloadTrackingEvents($download_tracking_events)
    {
        $this->container['download_tracking_events'] = $download_tracking_events;

        return $this;
    }

    /**
     * Gets requires_manifesting
     *
     * @return bool
     */
    public function getRequiresManifesting()
    {
        return $this->container['requires_manifesting'];
    }

    /**
     * Sets requires_manifesting
     *
     * @param bool $requires_manifesting requires_manifesting
     *
     * @return $this
     */
    public function setRequiresManifesting($requires_manifesting)
    {
        $this->container['requires_manifesting'] = $requires_manifesting;

        return $this;
    }

    /**
     * Gets manifested
     *
     * @return bool
     */
    public function getManifested()
    {
        return $this->container['manifested'];
    }

    /**
     * Sets manifested
     *
     * @param bool $manifested manifested
     *
     * @return $this
     */
    public function setManifested($manifested)
    {
        $this->container['manifested'] = $manifested;

        return $this;
    }

    /**
     * Gets shipment_date
     *
     * @return \DateTime
     */
    public function getShipmentDate()
    {
        return $this->container['shipment_date'];
    }

    /**
     * Sets shipment_date
     *
     * @param \DateTime $shipment_date shipment_date
     *
     * @return $this
     */
    public function setShipmentDate($shipment_date)
    {
        $this->container['shipment_date'] = $shipment_date;

        return $this;
    }

    /**
     * Gets label_url
     *
     * @return string
     */
    public function getLabelUrl()
    {
        return $this->container['label_url'];
    }

    /**
     * Sets label_url
     *
     * @param string $label_url label_url
     *
     * @return $this
     */
    public function setLabelUrl($label_url)
    {
        $this->container['label_url'] = $label_url;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime $last_updated last_updated
     *
     * @return $this
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets last_updated_by_user
     *
     * @return string
     */
    public function getLastUpdatedByUser()
    {
        return $this->container['last_updated_by_user'];
    }

    /**
     * Sets last_updated_by_user
     *
     * @param string $last_updated_by_user last_updated_by_user
     *
     * @return $this
     */
    public function setLastUpdatedByUser($last_updated_by_user)
    {
        $this->container['last_updated_by_user'] = $last_updated_by_user;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


