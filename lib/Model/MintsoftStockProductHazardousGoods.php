<?php
/**
 * ToolkitDataClassesStockProductHazardousGoods
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ToolkitDataClassesStockProductHazardousGoods Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MintsoftStockProductHazardousGoods implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Toolkit.DataClasses.Stock.ProductHazardousGoods';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'product_id' => 'int',
        'hazardous_un_number' => 'string',
        'hazardous_un_number_prefixed' => 'string',
        'hazardous_class' => 'string',
        'hazardous_proper_shipping_name' => 'string',
        'hazardous_packing_code' => 'string',
        'hazardous_tunnel_code' => 'string',
        'hazardous_limited_quantity' => 'string',
        'hazardous_full_proper_shipping_code' => 'string',
        'hazardous_content_id' => 'string',
        'hazardous_notes' => 'string',
        'litres_per_unit' => 'double',
        'packaging_description' => 'string',
        'packaging_instructions' => 'string',
        'freezing_point' => 'double',
        'id' => 'int',
        'last_updated' => '\DateTime',
        'last_updated_by_user' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'product_id' => 'int32',
        'hazardous_un_number' => null,
        'hazardous_un_number_prefixed' => null,
        'hazardous_class' => null,
        'hazardous_proper_shipping_name' => null,
        'hazardous_packing_code' => null,
        'hazardous_tunnel_code' => null,
        'hazardous_limited_quantity' => null,
        'hazardous_full_proper_shipping_code' => null,
        'hazardous_content_id' => null,
        'hazardous_notes' => null,
        'litres_per_unit' => 'double',
        'packaging_description' => null,
        'packaging_instructions' => null,
        'freezing_point' => 'double',
        'id' => 'int32',
        'last_updated' => 'date-time',
        'last_updated_by_user' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'product_id' => 'ProductID',
        'hazardous_un_number' => 'HazardousUnNumber',
        'hazardous_un_number_prefixed' => 'HazardousUnNumberPrefixed',
        'hazardous_class' => 'HazardousClass',
        'hazardous_proper_shipping_name' => 'HazardousProperShippingName',
        'hazardous_packing_code' => 'HazardousPackingCode',
        'hazardous_tunnel_code' => 'HazardousTunnelCode',
        'hazardous_limited_quantity' => 'HazardousLimitedQuantity',
        'hazardous_full_proper_shipping_code' => 'HazardousFullProperShippingCode',
        'hazardous_content_id' => 'HazardousContentId',
        'hazardous_notes' => 'HazardousNotes',
        'litres_per_unit' => 'LitresPerUnit',
        'packaging_description' => 'PackagingDescription',
        'packaging_instructions' => 'PackagingInstructions',
        'freezing_point' => 'FreezingPoint',
        'id' => 'ID',
        'last_updated' => 'LastUpdated',
        'last_updated_by_user' => 'LastUpdatedByUser'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'product_id' => 'setProductId',
        'hazardous_un_number' => 'setHazardousUnNumber',
        'hazardous_un_number_prefixed' => 'setHazardousUnNumberPrefixed',
        'hazardous_class' => 'setHazardousClass',
        'hazardous_proper_shipping_name' => 'setHazardousProperShippingName',
        'hazardous_packing_code' => 'setHazardousPackingCode',
        'hazardous_tunnel_code' => 'setHazardousTunnelCode',
        'hazardous_limited_quantity' => 'setHazardousLimitedQuantity',
        'hazardous_full_proper_shipping_code' => 'setHazardousFullProperShippingCode',
        'hazardous_content_id' => 'setHazardousContentId',
        'hazardous_notes' => 'setHazardousNotes',
        'litres_per_unit' => 'setLitresPerUnit',
        'packaging_description' => 'setPackagingDescription',
        'packaging_instructions' => 'setPackagingInstructions',
        'freezing_point' => 'setFreezingPoint',
        'id' => 'setId',
        'last_updated' => 'setLastUpdated',
        'last_updated_by_user' => 'setLastUpdatedByUser'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'product_id' => 'getProductId',
        'hazardous_un_number' => 'getHazardousUnNumber',
        'hazardous_un_number_prefixed' => 'getHazardousUnNumberPrefixed',
        'hazardous_class' => 'getHazardousClass',
        'hazardous_proper_shipping_name' => 'getHazardousProperShippingName',
        'hazardous_packing_code' => 'getHazardousPackingCode',
        'hazardous_tunnel_code' => 'getHazardousTunnelCode',
        'hazardous_limited_quantity' => 'getHazardousLimitedQuantity',
        'hazardous_full_proper_shipping_code' => 'getHazardousFullProperShippingCode',
        'hazardous_content_id' => 'getHazardousContentId',
        'hazardous_notes' => 'getHazardousNotes',
        'litres_per_unit' => 'getLitresPerUnit',
        'packaging_description' => 'getPackagingDescription',
        'packaging_instructions' => 'getPackagingInstructions',
        'freezing_point' => 'getFreezingPoint',
        'id' => 'getId',
        'last_updated' => 'getLastUpdated',
        'last_updated_by_user' => 'getLastUpdatedByUser'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['hazardous_un_number'] = isset($data['hazardous_un_number']) ? $data['hazardous_un_number'] : null;
        $this->container['hazardous_un_number_prefixed'] = isset($data['hazardous_un_number_prefixed']) ? $data['hazardous_un_number_prefixed'] : null;
        $this->container['hazardous_class'] = isset($data['hazardous_class']) ? $data['hazardous_class'] : null;
        $this->container['hazardous_proper_shipping_name'] = isset($data['hazardous_proper_shipping_name']) ? $data['hazardous_proper_shipping_name'] : null;
        $this->container['hazardous_packing_code'] = isset($data['hazardous_packing_code']) ? $data['hazardous_packing_code'] : null;
        $this->container['hazardous_tunnel_code'] = isset($data['hazardous_tunnel_code']) ? $data['hazardous_tunnel_code'] : null;
        $this->container['hazardous_limited_quantity'] = isset($data['hazardous_limited_quantity']) ? $data['hazardous_limited_quantity'] : null;
        $this->container['hazardous_full_proper_shipping_code'] = isset($data['hazardous_full_proper_shipping_code']) ? $data['hazardous_full_proper_shipping_code'] : null;
        $this->container['hazardous_content_id'] = isset($data['hazardous_content_id']) ? $data['hazardous_content_id'] : null;
        $this->container['hazardous_notes'] = isset($data['hazardous_notes']) ? $data['hazardous_notes'] : null;
        $this->container['litres_per_unit'] = isset($data['litres_per_unit']) ? $data['litres_per_unit'] : null;
        $this->container['packaging_description'] = isset($data['packaging_description']) ? $data['packaging_description'] : null;
        $this->container['packaging_instructions'] = isset($data['packaging_instructions']) ? $data['packaging_instructions'] : null;
        $this->container['freezing_point'] = isset($data['freezing_point']) ? $data['freezing_point'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['last_updated'] = isset($data['last_updated']) ? $data['last_updated'] : null;
        $this->container['last_updated_by_user'] = isset($data['last_updated_by_user']) ? $data['last_updated_by_user'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets product_id
     *
     * @return int
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param int $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets hazardous_un_number
     *
     * @return string
     */
    public function getHazardousUnNumber()
    {
        return $this->container['hazardous_un_number'];
    }

    /**
     * Sets hazardous_un_number
     *
     * @param string $hazardous_un_number hazardous_un_number
     *
     * @return $this
     */
    public function setHazardousUnNumber($hazardous_un_number)
    {
        $this->container['hazardous_un_number'] = $hazardous_un_number;

        return $this;
    }

    /**
     * Gets hazardous_un_number_prefixed
     *
     * @return string
     */
    public function getHazardousUnNumberPrefixed()
    {
        return $this->container['hazardous_un_number_prefixed'];
    }

    /**
     * Sets hazardous_un_number_prefixed
     *
     * @param string $hazardous_un_number_prefixed hazardous_un_number_prefixed
     *
     * @return $this
     */
    public function setHazardousUnNumberPrefixed($hazardous_un_number_prefixed)
    {
        $this->container['hazardous_un_number_prefixed'] = $hazardous_un_number_prefixed;

        return $this;
    }

    /**
     * Gets hazardous_class
     *
     * @return string
     */
    public function getHazardousClass()
    {
        return $this->container['hazardous_class'];
    }

    /**
     * Sets hazardous_class
     *
     * @param string $hazardous_class hazardous_class
     *
     * @return $this
     */
    public function setHazardousClass($hazardous_class)
    {
        $this->container['hazardous_class'] = $hazardous_class;

        return $this;
    }

    /**
     * Gets hazardous_proper_shipping_name
     *
     * @return string
     */
    public function getHazardousProperShippingName()
    {
        return $this->container['hazardous_proper_shipping_name'];
    }

    /**
     * Sets hazardous_proper_shipping_name
     *
     * @param string $hazardous_proper_shipping_name hazardous_proper_shipping_name
     *
     * @return $this
     */
    public function setHazardousProperShippingName($hazardous_proper_shipping_name)
    {
        $this->container['hazardous_proper_shipping_name'] = $hazardous_proper_shipping_name;

        return $this;
    }

    /**
     * Gets hazardous_packing_code
     *
     * @return string
     */
    public function getHazardousPackingCode()
    {
        return $this->container['hazardous_packing_code'];
    }

    /**
     * Sets hazardous_packing_code
     *
     * @param string $hazardous_packing_code hazardous_packing_code
     *
     * @return $this
     */
    public function setHazardousPackingCode($hazardous_packing_code)
    {
        $this->container['hazardous_packing_code'] = $hazardous_packing_code;

        return $this;
    }

    /**
     * Gets hazardous_tunnel_code
     *
     * @return string
     */
    public function getHazardousTunnelCode()
    {
        return $this->container['hazardous_tunnel_code'];
    }

    /**
     * Sets hazardous_tunnel_code
     *
     * @param string $hazardous_tunnel_code hazardous_tunnel_code
     *
     * @return $this
     */
    public function setHazardousTunnelCode($hazardous_tunnel_code)
    {
        $this->container['hazardous_tunnel_code'] = $hazardous_tunnel_code;

        return $this;
    }

    /**
     * Gets hazardous_limited_quantity
     *
     * @return string
     */
    public function getHazardousLimitedQuantity()
    {
        return $this->container['hazardous_limited_quantity'];
    }

    /**
     * Sets hazardous_limited_quantity
     *
     * @param string $hazardous_limited_quantity hazardous_limited_quantity
     *
     * @return $this
     */
    public function setHazardousLimitedQuantity($hazardous_limited_quantity)
    {
        $this->container['hazardous_limited_quantity'] = $hazardous_limited_quantity;

        return $this;
    }

    /**
     * Gets hazardous_full_proper_shipping_code
     *
     * @return string
     */
    public function getHazardousFullProperShippingCode()
    {
        return $this->container['hazardous_full_proper_shipping_code'];
    }

    /**
     * Sets hazardous_full_proper_shipping_code
     *
     * @param string $hazardous_full_proper_shipping_code hazardous_full_proper_shipping_code
     *
     * @return $this
     */
    public function setHazardousFullProperShippingCode($hazardous_full_proper_shipping_code)
    {
        $this->container['hazardous_full_proper_shipping_code'] = $hazardous_full_proper_shipping_code;

        return $this;
    }

    /**
     * Gets hazardous_content_id
     *
     * @return string
     */
    public function getHazardousContentId()
    {
        return $this->container['hazardous_content_id'];
    }

    /**
     * Sets hazardous_content_id
     *
     * @param string $hazardous_content_id hazardous_content_id
     *
     * @return $this
     */
    public function setHazardousContentId($hazardous_content_id)
    {
        $this->container['hazardous_content_id'] = $hazardous_content_id;

        return $this;
    }

    /**
     * Gets hazardous_notes
     *
     * @return string
     */
    public function getHazardousNotes()
    {
        return $this->container['hazardous_notes'];
    }

    /**
     * Sets hazardous_notes
     *
     * @param string $hazardous_notes hazardous_notes
     *
     * @return $this
     */
    public function setHazardousNotes($hazardous_notes)
    {
        $this->container['hazardous_notes'] = $hazardous_notes;

        return $this;
    }

    /**
     * Gets litres_per_unit
     *
     * @return double
     */
    public function getLitresPerUnit()
    {
        return $this->container['litres_per_unit'];
    }

    /**
     * Sets litres_per_unit
     *
     * @param double $litres_per_unit litres_per_unit
     *
     * @return $this
     */
    public function setLitresPerUnit($litres_per_unit)
    {
        $this->container['litres_per_unit'] = $litres_per_unit;

        return $this;
    }

    /**
     * Gets packaging_description
     *
     * @return string
     */
    public function getPackagingDescription()
    {
        return $this->container['packaging_description'];
    }

    /**
     * Sets packaging_description
     *
     * @param string $packaging_description packaging_description
     *
     * @return $this
     */
    public function setPackagingDescription($packaging_description)
    {
        $this->container['packaging_description'] = $packaging_description;

        return $this;
    }

    /**
     * Gets packaging_instructions
     *
     * @return string
     */
    public function getPackagingInstructions()
    {
        return $this->container['packaging_instructions'];
    }

    /**
     * Sets packaging_instructions
     *
     * @param string $packaging_instructions packaging_instructions
     *
     * @return $this
     */
    public function setPackagingInstructions($packaging_instructions)
    {
        $this->container['packaging_instructions'] = $packaging_instructions;

        return $this;
    }

    /**
     * Gets freezing_point
     *
     * @return double
     */
    public function getFreezingPoint()
    {
        return $this->container['freezing_point'];
    }

    /**
     * Sets freezing_point
     *
     * @param double $freezing_point freezing_point
     *
     * @return $this
     */
    public function setFreezingPoint($freezing_point)
    {
        $this->container['freezing_point'] = $freezing_point;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime $last_updated last_updated
     *
     * @return $this
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets last_updated_by_user
     *
     * @return string
     */
    public function getLastUpdatedByUser()
    {
        return $this->container['last_updated_by_user'];
    }

    /**
     * Sets last_updated_by_user
     *
     * @param string $last_updated_by_user last_updated_by_user
     *
     * @return $this
     */
    public function setLastUpdatedByUser($last_updated_by_user)
    {
        $this->container['last_updated_by_user'] = $last_updated_by_user;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     * @throws \JsonException
     */
    public function __toString(): string
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR | JSON_PRETTY_PRINT);
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }
}


