<?php
/**
 * ToolkitDataClassesOrdersAPINewOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ToolkitDataClassesOrdersAPINewOrder Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ToolkitDataClassesOrdersAPINewOrder implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Toolkit.DataClasses.Orders.API.NewOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_number' => 'string',
        'external_order_reference' => 'string',
        'title' => 'string',
        'company_name' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'address1' => 'string',
        'address2' => 'string',
        'address3' => 'string',
        'town' => 'string',
        'county' => 'string',
        'post_code' => 'string',
        'country' => 'string',
        'country_id' => 'int',
        'email' => 'string',
        'phone' => 'string',
        'mobile' => 'string',
        'courier_service' => 'string',
        'courier_service_id' => 'int',
        'channel' => 'string',
        'channel_id' => 'int',
        'warehouse' => 'string',
        'warehouse_id' => 'int',
        'currency' => 'string',
        'currency_id' => 'int',
        'delivery_date' => '\DateTime',
        'despatch_date' => '\DateTime',
        'required_delivery_date' => '\DateTime',
        'required_despatch_date' => '\DateTime',
        'comments' => 'string',
        'delivery_notes' => 'string',
        'gift_messages' => 'string',
        'vat_number' => 'string',
        'eori_number' => 'string',
        'pid_number' => 'string',
        'ukims_number' => 'string',
        'ioss_number' => 'string',
        'order_value' => 'double',
        'shipping_total_ex_vat' => 'double',
        'shipping_total_vat' => 'double',
        'discount_total_ex_vat' => 'double',
        'discount_total_vat' => 'double',
        'total_vat' => 'double',
        'client_id' => 'int',
        'number_of_parcels' => 'int',
        'cash_on_delivery' => '\Swagger\Client\Model\ToolkitDataClassesOrdersAPICashOnDelivery',
        'recipient_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_number' => null,
        'external_order_reference' => null,
        'title' => null,
        'company_name' => null,
        'first_name' => null,
        'last_name' => null,
        'address1' => null,
        'address2' => null,
        'address3' => null,
        'town' => null,
        'county' => null,
        'post_code' => null,
        'country' => null,
        'country_id' => 'int32',
        'email' => null,
        'phone' => null,
        'mobile' => null,
        'courier_service' => null,
        'courier_service_id' => 'int32',
        'channel' => null,
        'channel_id' => 'int32',
        'warehouse' => null,
        'warehouse_id' => 'int32',
        'currency' => null,
        'currency_id' => 'int32',
        'delivery_date' => 'date-time',
        'despatch_date' => 'date-time',
        'required_delivery_date' => 'date-time',
        'required_despatch_date' => 'date-time',
        'comments' => null,
        'delivery_notes' => null,
        'gift_messages' => null,
        'vat_number' => null,
        'eori_number' => null,
        'pid_number' => null,
        'ukims_number' => null,
        'ioss_number' => null,
        'order_value' => 'double',
        'shipping_total_ex_vat' => 'double',
        'shipping_total_vat' => 'double',
        'discount_total_ex_vat' => 'double',
        'discount_total_vat' => 'double',
        'total_vat' => 'double',
        'client_id' => 'int32',
        'number_of_parcels' => 'int32',
        'cash_on_delivery' => null,
        'recipient_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_number' => 'OrderNumber',
        'external_order_reference' => 'ExternalOrderReference',
        'title' => 'Title',
        'company_name' => 'CompanyName',
        'first_name' => 'FirstName',
        'last_name' => 'LastName',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'address3' => 'Address3',
        'town' => 'Town',
        'county' => 'County',
        'post_code' => 'PostCode',
        'country' => 'Country',
        'country_id' => 'CountryId',
        'email' => 'Email',
        'phone' => 'Phone',
        'mobile' => 'Mobile',
        'courier_service' => 'CourierService',
        'courier_service_id' => 'CourierServiceId',
        'channel' => 'Channel',
        'channel_id' => 'ChannelId',
        'warehouse' => 'Warehouse',
        'warehouse_id' => 'WarehouseId',
        'currency' => 'Currency',
        'currency_id' => 'CurrencyId',
        'delivery_date' => 'DeliveryDate',
        'despatch_date' => 'DespatchDate',
        'required_delivery_date' => 'RequiredDeliveryDate',
        'required_despatch_date' => 'RequiredDespatchDate',
        'comments' => 'Comments',
        'delivery_notes' => 'DeliveryNotes',
        'gift_messages' => 'GiftMessages',
        'vat_number' => 'VATNumber',
        'eori_number' => 'EORINumber',
        'pid_number' => 'PIDNumber',
        'ukims_number' => 'UKIMSNumber',
        'ioss_number' => 'IOSSNumber',
        'order_value' => 'OrderValue',
        'shipping_total_ex_vat' => 'ShippingTotalExVat',
        'shipping_total_vat' => 'ShippingTotalVat',
        'discount_total_ex_vat' => 'DiscountTotalExVat',
        'discount_total_vat' => 'DiscountTotalVat',
        'total_vat' => 'TotalVat',
        'client_id' => 'ClientId',
        'number_of_parcels' => 'NumberOfParcels',
        'cash_on_delivery' => 'CashOnDelivery',
        'recipient_type' => 'RecipientType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_number' => 'setOrderNumber',
        'external_order_reference' => 'setExternalOrderReference',
        'title' => 'setTitle',
        'company_name' => 'setCompanyName',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'address3' => 'setAddress3',
        'town' => 'setTown',
        'county' => 'setCounty',
        'post_code' => 'setPostCode',
        'country' => 'setCountry',
        'country_id' => 'setCountryId',
        'email' => 'setEmail',
        'phone' => 'setPhone',
        'mobile' => 'setMobile',
        'courier_service' => 'setCourierService',
        'courier_service_id' => 'setCourierServiceId',
        'channel' => 'setChannel',
        'channel_id' => 'setChannelId',
        'warehouse' => 'setWarehouse',
        'warehouse_id' => 'setWarehouseId',
        'currency' => 'setCurrency',
        'currency_id' => 'setCurrencyId',
        'delivery_date' => 'setDeliveryDate',
        'despatch_date' => 'setDespatchDate',
        'required_delivery_date' => 'setRequiredDeliveryDate',
        'required_despatch_date' => 'setRequiredDespatchDate',
        'comments' => 'setComments',
        'delivery_notes' => 'setDeliveryNotes',
        'gift_messages' => 'setGiftMessages',
        'vat_number' => 'setVatNumber',
        'eori_number' => 'setEoriNumber',
        'pid_number' => 'setPidNumber',
        'ukims_number' => 'setUkimsNumber',
        'ioss_number' => 'setIossNumber',
        'order_value' => 'setOrderValue',
        'shipping_total_ex_vat' => 'setShippingTotalExVat',
        'shipping_total_vat' => 'setShippingTotalVat',
        'discount_total_ex_vat' => 'setDiscountTotalExVat',
        'discount_total_vat' => 'setDiscountTotalVat',
        'total_vat' => 'setTotalVat',
        'client_id' => 'setClientId',
        'number_of_parcels' => 'setNumberOfParcels',
        'cash_on_delivery' => 'setCashOnDelivery',
        'recipient_type' => 'setRecipientType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_number' => 'getOrderNumber',
        'external_order_reference' => 'getExternalOrderReference',
        'title' => 'getTitle',
        'company_name' => 'getCompanyName',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'address3' => 'getAddress3',
        'town' => 'getTown',
        'county' => 'getCounty',
        'post_code' => 'getPostCode',
        'country' => 'getCountry',
        'country_id' => 'getCountryId',
        'email' => 'getEmail',
        'phone' => 'getPhone',
        'mobile' => 'getMobile',
        'courier_service' => 'getCourierService',
        'courier_service_id' => 'getCourierServiceId',
        'channel' => 'getChannel',
        'channel_id' => 'getChannelId',
        'warehouse' => 'getWarehouse',
        'warehouse_id' => 'getWarehouseId',
        'currency' => 'getCurrency',
        'currency_id' => 'getCurrencyId',
        'delivery_date' => 'getDeliveryDate',
        'despatch_date' => 'getDespatchDate',
        'required_delivery_date' => 'getRequiredDeliveryDate',
        'required_despatch_date' => 'getRequiredDespatchDate',
        'comments' => 'getComments',
        'delivery_notes' => 'getDeliveryNotes',
        'gift_messages' => 'getGiftMessages',
        'vat_number' => 'getVatNumber',
        'eori_number' => 'getEoriNumber',
        'pid_number' => 'getPidNumber',
        'ukims_number' => 'getUkimsNumber',
        'ioss_number' => 'getIossNumber',
        'order_value' => 'getOrderValue',
        'shipping_total_ex_vat' => 'getShippingTotalExVat',
        'shipping_total_vat' => 'getShippingTotalVat',
        'discount_total_ex_vat' => 'getDiscountTotalExVat',
        'discount_total_vat' => 'getDiscountTotalVat',
        'total_vat' => 'getTotalVat',
        'client_id' => 'getClientId',
        'number_of_parcels' => 'getNumberOfParcels',
        'cash_on_delivery' => 'getCashOnDelivery',
        'recipient_type' => 'getRecipientType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['external_order_reference'] = isset($data['external_order_reference']) ? $data['external_order_reference'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['town'] = isset($data['town']) ? $data['town'] : null;
        $this->container['county'] = isset($data['county']) ? $data['county'] : null;
        $this->container['post_code'] = isset($data['post_code']) ? $data['post_code'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['country_id'] = isset($data['country_id']) ? $data['country_id'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['courier_service'] = isset($data['courier_service']) ? $data['courier_service'] : null;
        $this->container['courier_service_id'] = isset($data['courier_service_id']) ? $data['courier_service_id'] : null;
        $this->container['channel'] = isset($data['channel']) ? $data['channel'] : null;
        $this->container['channel_id'] = isset($data['channel_id']) ? $data['channel_id'] : null;
        $this->container['warehouse'] = isset($data['warehouse']) ? $data['warehouse'] : null;
        $this->container['warehouse_id'] = isset($data['warehouse_id']) ? $data['warehouse_id'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['currency_id'] = isset($data['currency_id']) ? $data['currency_id'] : null;
        $this->container['delivery_date'] = isset($data['delivery_date']) ? $data['delivery_date'] : null;
        $this->container['despatch_date'] = isset($data['despatch_date']) ? $data['despatch_date'] : null;
        $this->container['required_delivery_date'] = isset($data['required_delivery_date']) ? $data['required_delivery_date'] : null;
        $this->container['required_despatch_date'] = isset($data['required_despatch_date']) ? $data['required_despatch_date'] : null;
        $this->container['comments'] = isset($data['comments']) ? $data['comments'] : null;
        $this->container['delivery_notes'] = isset($data['delivery_notes']) ? $data['delivery_notes'] : null;
        $this->container['gift_messages'] = isset($data['gift_messages']) ? $data['gift_messages'] : null;
        $this->container['vat_number'] = isset($data['vat_number']) ? $data['vat_number'] : null;
        $this->container['eori_number'] = isset($data['eori_number']) ? $data['eori_number'] : null;
        $this->container['pid_number'] = isset($data['pid_number']) ? $data['pid_number'] : null;
        $this->container['ukims_number'] = isset($data['ukims_number']) ? $data['ukims_number'] : null;
        $this->container['ioss_number'] = isset($data['ioss_number']) ? $data['ioss_number'] : null;
        $this->container['order_value'] = isset($data['order_value']) ? $data['order_value'] : null;
        $this->container['shipping_total_ex_vat'] = isset($data['shipping_total_ex_vat']) ? $data['shipping_total_ex_vat'] : null;
        $this->container['shipping_total_vat'] = isset($data['shipping_total_vat']) ? $data['shipping_total_vat'] : null;
        $this->container['discount_total_ex_vat'] = isset($data['discount_total_ex_vat']) ? $data['discount_total_ex_vat'] : null;
        $this->container['discount_total_vat'] = isset($data['discount_total_vat']) ? $data['discount_total_vat'] : null;
        $this->container['total_vat'] = isset($data['total_vat']) ? $data['total_vat'] : null;
        $this->container['client_id'] = isset($data['client_id']) ? $data['client_id'] : null;
        $this->container['number_of_parcels'] = isset($data['number_of_parcels']) ? $data['number_of_parcels'] : null;
        $this->container['cash_on_delivery'] = isset($data['cash_on_delivery']) ? $data['cash_on_delivery'] : null;
        $this->container['recipient_type'] = isset($data['recipient_type']) ? $data['recipient_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_number
     *
     * @return string
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string $order_number order_number
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets external_order_reference
     *
     * @return string
     */
    public function getExternalOrderReference()
    {
        return $this->container['external_order_reference'];
    }

    /**
     * Sets external_order_reference
     *
     * @param string $external_order_reference external_order_reference
     *
     * @return $this
     */
    public function setExternalOrderReference($external_order_reference)
    {
        $this->container['external_order_reference'] = $external_order_reference;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 address1
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 address2
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 address3
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets town
     *
     * @return string
     */
    public function getTown()
    {
        return $this->container['town'];
    }

    /**
     * Sets town
     *
     * @param string $town town
     *
     * @return $this
     */
    public function setTown($town)
    {
        $this->container['town'] = $town;

        return $this;
    }

    /**
     * Gets county
     *
     * @return string
     */
    public function getCounty()
    {
        return $this->container['county'];
    }

    /**
     * Sets county
     *
     * @param string $county county
     *
     * @return $this
     */
    public function setCounty($county)
    {
        $this->container['county'] = $county;

        return $this;
    }

    /**
     * Gets post_code
     *
     * @return string
     */
    public function getPostCode()
    {
        return $this->container['post_code'];
    }

    /**
     * Sets post_code
     *
     * @param string $post_code post_code
     *
     * @return $this
     */
    public function setPostCode($post_code)
    {
        $this->container['post_code'] = $post_code;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets country_id
     *
     * @return int
     */
    public function getCountryId()
    {
        return $this->container['country_id'];
    }

    /**
     * Sets country_id
     *
     * @param int $country_id country_id
     *
     * @return $this
     */
    public function setCountryId($country_id)
    {
        $this->container['country_id'] = $country_id;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets courier_service
     *
     * @return string
     */
    public function getCourierService()
    {
        return $this->container['courier_service'];
    }

    /**
     * Sets courier_service
     *
     * @param string $courier_service courier_service
     *
     * @return $this
     */
    public function setCourierService($courier_service)
    {
        $this->container['courier_service'] = $courier_service;

        return $this;
    }

    /**
     * Gets courier_service_id
     *
     * @return int
     */
    public function getCourierServiceId()
    {
        return $this->container['courier_service_id'];
    }

    /**
     * Sets courier_service_id
     *
     * @param int $courier_service_id courier_service_id
     *
     * @return $this
     */
    public function setCourierServiceId($courier_service_id)
    {
        $this->container['courier_service_id'] = $courier_service_id;

        return $this;
    }

    /**
     * Gets channel
     *
     * @return string
     */
    public function getChannel()
    {
        return $this->container['channel'];
    }

    /**
     * Sets channel
     *
     * @param string $channel channel
     *
     * @return $this
     */
    public function setChannel($channel)
    {
        $this->container['channel'] = $channel;

        return $this;
    }

    /**
     * Gets channel_id
     *
     * @return int
     */
    public function getChannelId()
    {
        return $this->container['channel_id'];
    }

    /**
     * Sets channel_id
     *
     * @param int $channel_id channel_id
     *
     * @return $this
     */
    public function setChannelId($channel_id)
    {
        $this->container['channel_id'] = $channel_id;

        return $this;
    }

    /**
     * Gets warehouse
     *
     * @return string
     */
    public function getWarehouse()
    {
        return $this->container['warehouse'];
    }

    /**
     * Sets warehouse
     *
     * @param string $warehouse warehouse
     *
     * @return $this
     */
    public function setWarehouse($warehouse)
    {
        $this->container['warehouse'] = $warehouse;

        return $this;
    }

    /**
     * Gets warehouse_id
     *
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->container['warehouse_id'];
    }

    /**
     * Sets warehouse_id
     *
     * @param int $warehouse_id warehouse_id
     *
     * @return $this
     */
    public function setWarehouseId($warehouse_id)
    {
        $this->container['warehouse_id'] = $warehouse_id;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return int
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param int $currency_id currency_id
     *
     * @return $this
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets delivery_date
     *
     * @return \DateTime
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param \DateTime $delivery_date delivery_date
     *
     * @return $this
     */
    public function setDeliveryDate($delivery_date)
    {
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets despatch_date
     *
     * @return \DateTime
     */
    public function getDespatchDate()
    {
        return $this->container['despatch_date'];
    }

    /**
     * Sets despatch_date
     *
     * @param \DateTime $despatch_date despatch_date
     *
     * @return $this
     */
    public function setDespatchDate($despatch_date)
    {
        $this->container['despatch_date'] = $despatch_date;

        return $this;
    }

    /**
     * Gets required_delivery_date
     *
     * @return \DateTime
     */
    public function getRequiredDeliveryDate()
    {
        return $this->container['required_delivery_date'];
    }

    /**
     * Sets required_delivery_date
     *
     * @param \DateTime $required_delivery_date required_delivery_date
     *
     * @return $this
     */
    public function setRequiredDeliveryDate($required_delivery_date)
    {
        $this->container['required_delivery_date'] = $required_delivery_date;

        return $this;
    }

    /**
     * Gets required_despatch_date
     *
     * @return \DateTime
     */
    public function getRequiredDespatchDate()
    {
        return $this->container['required_despatch_date'];
    }

    /**
     * Sets required_despatch_date
     *
     * @param \DateTime $required_despatch_date required_despatch_date
     *
     * @return $this
     */
    public function setRequiredDespatchDate($required_despatch_date)
    {
        $this->container['required_despatch_date'] = $required_despatch_date;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return string
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param string $comments comments
     *
     * @return $this
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets delivery_notes
     *
     * @return string
     */
    public function getDeliveryNotes()
    {
        return $this->container['delivery_notes'];
    }

    /**
     * Sets delivery_notes
     *
     * @param string $delivery_notes delivery_notes
     *
     * @return $this
     */
    public function setDeliveryNotes($delivery_notes)
    {
        $this->container['delivery_notes'] = $delivery_notes;

        return $this;
    }

    /**
     * Gets gift_messages
     *
     * @return string
     */
    public function getGiftMessages()
    {
        return $this->container['gift_messages'];
    }

    /**
     * Sets gift_messages
     *
     * @param string $gift_messages gift_messages
     *
     * @return $this
     */
    public function setGiftMessages($gift_messages)
    {
        $this->container['gift_messages'] = $gift_messages;

        return $this;
    }

    /**
     * Gets vat_number
     *
     * @return string
     */
    public function getVatNumber()
    {
        return $this->container['vat_number'];
    }

    /**
     * Sets vat_number
     *
     * @param string $vat_number vat_number
     *
     * @return $this
     */
    public function setVatNumber($vat_number)
    {
        $this->container['vat_number'] = $vat_number;

        return $this;
    }

    /**
     * Gets eori_number
     *
     * @return string
     */
    public function getEoriNumber()
    {
        return $this->container['eori_number'];
    }

    /**
     * Sets eori_number
     *
     * @param string $eori_number eori_number
     *
     * @return $this
     */
    public function setEoriNumber($eori_number)
    {
        $this->container['eori_number'] = $eori_number;

        return $this;
    }

    /**
     * Gets pid_number
     *
     * @return string
     */
    public function getPidNumber()
    {
        return $this->container['pid_number'];
    }

    /**
     * Sets pid_number
     *
     * @param string $pid_number pid_number
     *
     * @return $this
     */
    public function setPidNumber($pid_number)
    {
        $this->container['pid_number'] = $pid_number;

        return $this;
    }

    /**
     * Gets ukims_number
     *
     * @return string
     */
    public function getUkimsNumber()
    {
        return $this->container['ukims_number'];
    }

    /**
     * Sets ukims_number
     *
     * @param string $ukims_number ukims_number
     *
     * @return $this
     */
    public function setUkimsNumber($ukims_number)
    {
        $this->container['ukims_number'] = $ukims_number;

        return $this;
    }

    /**
     * Gets ioss_number
     *
     * @return string
     */
    public function getIossNumber()
    {
        return $this->container['ioss_number'];
    }

    /**
     * Sets ioss_number
     *
     * @param string $ioss_number ioss_number
     *
     * @return $this
     */
    public function setIossNumber($ioss_number)
    {
        $this->container['ioss_number'] = $ioss_number;

        return $this;
    }

    /**
     * Gets order_value
     *
     * @return double
     */
    public function getOrderValue()
    {
        return $this->container['order_value'];
    }

    /**
     * Sets order_value
     *
     * @param double $order_value order_value
     *
     * @return $this
     */
    public function setOrderValue($order_value)
    {
        $this->container['order_value'] = $order_value;

        return $this;
    }

    /**
     * Gets shipping_total_ex_vat
     *
     * @return double
     */
    public function getShippingTotalExVat()
    {
        return $this->container['shipping_total_ex_vat'];
    }

    /**
     * Sets shipping_total_ex_vat
     *
     * @param double $shipping_total_ex_vat shipping_total_ex_vat
     *
     * @return $this
     */
    public function setShippingTotalExVat($shipping_total_ex_vat)
    {
        $this->container['shipping_total_ex_vat'] = $shipping_total_ex_vat;

        return $this;
    }

    /**
     * Gets shipping_total_vat
     *
     * @return double
     */
    public function getShippingTotalVat()
    {
        return $this->container['shipping_total_vat'];
    }

    /**
     * Sets shipping_total_vat
     *
     * @param double $shipping_total_vat shipping_total_vat
     *
     * @return $this
     */
    public function setShippingTotalVat($shipping_total_vat)
    {
        $this->container['shipping_total_vat'] = $shipping_total_vat;

        return $this;
    }

    /**
     * Gets discount_total_ex_vat
     *
     * @return double
     */
    public function getDiscountTotalExVat()
    {
        return $this->container['discount_total_ex_vat'];
    }

    /**
     * Sets discount_total_ex_vat
     *
     * @param double $discount_total_ex_vat discount_total_ex_vat
     *
     * @return $this
     */
    public function setDiscountTotalExVat($discount_total_ex_vat)
    {
        $this->container['discount_total_ex_vat'] = $discount_total_ex_vat;

        return $this;
    }

    /**
     * Gets discount_total_vat
     *
     * @return double
     */
    public function getDiscountTotalVat()
    {
        return $this->container['discount_total_vat'];
    }

    /**
     * Sets discount_total_vat
     *
     * @param double $discount_total_vat discount_total_vat
     *
     * @return $this
     */
    public function setDiscountTotalVat($discount_total_vat)
    {
        $this->container['discount_total_vat'] = $discount_total_vat;

        return $this;
    }

    /**
     * Gets total_vat
     *
     * @return double
     */
    public function getTotalVat()
    {
        return $this->container['total_vat'];
    }

    /**
     * Sets total_vat
     *
     * @param double $total_vat total_vat
     *
     * @return $this
     */
    public function setTotalVat($total_vat)
    {
        $this->container['total_vat'] = $total_vat;

        return $this;
    }

    /**
     * Gets client_id
     *
     * @return int
     */
    public function getClientId()
    {
        return $this->container['client_id'];
    }

    /**
     * Sets client_id
     *
     * @param int $client_id client_id
     *
     * @return $this
     */
    public function setClientId($client_id)
    {
        $this->container['client_id'] = $client_id;

        return $this;
    }

    /**
     * Gets number_of_parcels
     *
     * @return int
     */
    public function getNumberOfParcels()
    {
        return $this->container['number_of_parcels'];
    }

    /**
     * Sets number_of_parcels
     *
     * @param int $number_of_parcels number_of_parcels
     *
     * @return $this
     */
    public function setNumberOfParcels($number_of_parcels)
    {
        $this->container['number_of_parcels'] = $number_of_parcels;

        return $this;
    }

    /**
     * Gets cash_on_delivery
     *
     * @return \Swagger\Client\Model\ToolkitDataClassesOrdersAPICashOnDelivery
     */
    public function getCashOnDelivery()
    {
        return $this->container['cash_on_delivery'];
    }

    /**
     * Sets cash_on_delivery
     *
     * @param \Swagger\Client\Model\ToolkitDataClassesOrdersAPICashOnDelivery $cash_on_delivery cash_on_delivery
     *
     * @return $this
     */
    public function setCashOnDelivery($cash_on_delivery)
    {
        $this->container['cash_on_delivery'] = $cash_on_delivery;

        return $this;
    }

    /**
     * Gets recipient_type
     *
     * @return string
     */
    public function getRecipientType()
    {
        return $this->container['recipient_type'];
    }

    /**
     * Sets recipient_type
     *
     * @param string $recipient_type recipient_type
     *
     * @return $this
     */
    public function setRecipientType($recipient_type)
    {
        $this->container['recipient_type'] = $recipient_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


